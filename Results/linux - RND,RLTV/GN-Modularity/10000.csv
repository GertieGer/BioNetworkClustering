i,size,mu,method,time,modularity,conductance,jaccard
10000_0.5_0,ERRORException type : KeyboardInterrupt Exception message : Stack trace : ['File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemeniteStepTesterLinux.py , Line : 78, Func.Name : run_test, Message : comms = ys.get_communities(G, splitting_func=method, randomized=RANDOMIZED, remerge=REMERGE ,relative=RELATIVE)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 408, Func.Name : get_communities, Message : louvain.run()', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 41, Func.Name : run, Message : self.iterate()', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 135, Func.Name : iterate, Message : self.split_communities(self.communities, community_map)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 207, Func.Name : split_communities, Message : sub_community_map = self.splitting_func(subgraph, self.tracker.m, self.tracker.degrees)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/splitting_functions.py , Line : 40, Func.Name : girvanNewmanMaxModularity, Message : for comp in comps:', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/community/centrality.py , Line : 147, Func.Name : girvan_newman, Message : yield _without_most_central_edges(g, most_valuable_edge)', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/community/centrality.py , Line : 166, Func.Name : _without_most_central_edges, Message : edge = most_valuable_edge(G)', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/community/centrality.py , Line : 138, Func.Name : most_valuable_edge, Message : betweenness = nx.edge_betweenness_centrality(G)', "File : <class 'networkx.utils.decorators.argmap'> compilation 17 , Line : 4, Func.Name : argmap_edge_betweenness_centrality_14, Message : import inspect", 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/centrality/betweenness.py , Line : 229, Func.Name : edge_betweenness_centrality, Message : S, P, sigma, _ = _single_source_shortest_path_basic(G, s)', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/centrality/betweenness.py , Line : 277, Func.Name : _single_source_shortest_path_basic, Message : P[w].append(v)  # predecessors']
10000_0.5_1,ERRORException type : KeyboardInterrupt Exception message : Stack trace : ['File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemeniteStepTesterLinux.py , Line : 78, Func.Name : run_test, Message : comms = ys.get_communities(G, splitting_func=method, randomized=RANDOMIZED, remerge=REMERGE ,relative=RELATIVE)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 408, Func.Name : get_communities, Message : louvain.run()', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 41, Func.Name : run, Message : self.iterate()', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 95, Func.Name : iterate, Message : neighbour_communities = self.get_neighbour_communities(', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 268, Func.Name : get_neighbour_communities, Message : neighbour_community = community_map[neighbour]']
10000_0.5_2,ERRORException type : KeyboardInterrupt Exception message : Stack trace : ['File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemeniteStepTesterLinux.py , Line : 78, Func.Name : run_test, Message : comms = ys.get_communities(G, splitting_func=method, randomized=RANDOMIZED, remerge=REMERGE ,relative=RELATIVE)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 408, Func.Name : get_communities, Message : louvain.run()', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 41, Func.Name : run, Message : self.iterate()', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 135, Func.Name : iterate, Message : self.split_communities(self.communities, community_map)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/yemenitestep.py , Line : 207, Func.Name : split_communities, Message : sub_community_map = self.splitting_func(subgraph, self.tracker.m, self.tracker.degrees)', 'File : /home/talyasapir2/BioNetworkClustering/YemeniteStep/splitting_functions.py , Line : 40, Func.Name : girvanNewmanMaxModularity, Message : for comp in comps:', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/community/centrality.py , Line : 147, Func.Name : girvan_newman, Message : yield _without_most_central_edges(g, most_valuable_edge)', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/community/centrality.py , Line : 166, Func.Name : _without_most_central_edges, Message : edge = most_valuable_edge(G)', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/community/centrality.py , Line : 138, Func.Name : most_valuable_edge, Message : betweenness = nx.edge_betweenness_centrality(G)', "File : <class 'networkx.utils.decorators.argmap'> compilation 17 , Line : 4, Func.Name : argmap_edge_betweenness_centrality_14, Message : import inspect", 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/centrality/betweenness.py , Line : 229, Func.Name : edge_betweenness_centrality, Message : S, P, sigma, _ = _single_source_shortest_path_basic(G, s)', 'File : /home/talyasapir2/.local/lib/python3.9/site-packages/networkx/algorithms/centrality/betweenness.py , Line : 275, Func.Name : _single_source_shortest_path_basic, Message : if D[w] == Dv + 1:  # this is a shortest path, count paths']
3,10000,0.5,GN_modularity,67.88598537445068,0.5040264951639347,0.5174104878257735,0.232508871280365
4,10000,0.5,GN_modularity,63.77141046524048,0.5037441638986581,0.515982930513505,0.26161887616745144
5,10000,0.5,GN_modularity,64.22602725028992,0.5043556255977996,0.5175293527197116,0.23339171092724897
6,10000,0.5,GN_modularity,65.07401990890503,0.5041718004514022,0.517049393668111,0.24552127233602483
7,10000,0.5,GN_modularity,65.56016206741333,0.5044291441194979,0.5172132213587075,0.24401408450704226
8,10000,0.5,GN_modularity,60.71898627281189,0.5043767775487044,0.5168053876448372,0.2442751672048393
9,10000,0.5,GN_modularity,63.712563276290894,0.5041884922957884,0.5172131287025847,0.23764744105889166
0,10000,0.6,GN_modularity,44.64210629463196,0.4060813095543841,0.4223300092349703,0.1875401746942298
1,10000,0.6,GN_modularity,45.05894160270691,0.406437089799648,0.4222219734052288,0.1920682325226276
2,10000,0.6,GN_modularity,43.460471630096436,0.4061162319863873,0.4222063870509435,0.19745152497950186
3,10000,0.6,GN_modularity,45.336979389190674,0.40586869486951815,0.42207780689905816,0.1968034943738557
4,10000,0.6,GN_modularity,44.45142960548401,0.40618429296309216,0.42234133168041443,0.18852509981746396
5,10000,0.6,GN_modularity,45.429484367370605,0.4058571218405663,0.4210703433901891,0.19895271882130086
6,10000,0.6,GN_modularity,44.304869413375854,0.40625117681046213,0.4220886192291726,0.19643447141351716
7,10000,0.6,GN_modularity,45.11117911338806,0.4063547703639513,0.42206984597590624,0.19364281754825935
8,10000,0.6,GN_modularity,48.63597798347473,0.4063034386597168,0.422738472561892,0.19178835156293375
9,10000,0.6,GN_modularity,44.69318127632141,0.4052781726862148,0.42177908061913383,0.19090605370698563
